@startuml C1 - Legado
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(cliente, "Cliente")

System_Boundary(b_checkout, "Checkout Services") {
    Container(checkout, "Checkout Service", "Java, SpringBoot", "Executa os calculos com base nos produtos que o cliente escolheu e finaliza a compra")
    Container(order_service, "Order Service", "Java, SpringBoot", "Cria uma ordem")
    Container(order_consumer, "Order Consumer", "Java, SpringBoot", "Processa orders")
    Container(order_publisher, "Order Publisher", "Java, SpringBoot", "Recebe uma atualização")
    Container(rabbit, "Message Broker", "RabbitMQ", "Trafega orders")
    ContainerDb(mongo, "Database", "MongoDB", "Armazena ordens de compra")
}

System_Boundary(b_other_services, "E-commerce Services") {
    Container(accounts, "Accounts Service", "Java, SpringBoot", "Guarda informações de contas de usuario")
    Container(pricing, "Pricing Service", "Java, SpringBoot", "Calcula preços")
    Container(combos, "Accounts Service", "Java, SpringBoot", "Guarda informações de combos")
    Container(items, "Items Service", "Java, SpringBoot", "Salva as informações de items")
    Container(persistentCart, "Persistent Cart Publisher", "Java, SpringBoot", "Atualiza carrinho persistido")
    Container(communications, "Communication Publisher", "Java, SpringBoot", "Envia mensagem para usuarios")
    Container(inventory, "Inventory Publisher", "Java, SpringBoot", "Atualiza as informações de estoque")
    Container(rewards, "Rewards Publisher", "Java, SpringBoot", "Atualiza pontuação de usuario")
}

System(erp, "ERP")
Rel(cliente, checkout, "Envia carrinho de compras", "HTTPS")

Rel(checkout, order_service, "Envia uma nova ordem", "HTTP")
Rel(checkout, accounts, "Busca dados da conta", "HTTP")
Rel(checkout, pricing, "Envia dados para calculo de preço", "HTTP")
Rel(checkout, combos, "Busca dados de combos", "HTTP")
Rel(checkout, items, "Busca dados de itens", "HTTP")
Rel(checkout, persistentCart, "Limpa carrinho peristido", "HTTP")
Rel(checkout, communications, "Envia email de compra", "HTTP")
Rel(checkout, inventory, "Da baixa no estoque", "HTTP")
Rel(checkout, rewards, "Envia pontos para os clientes", "HTTP")


Rel(order_service, cliente, "Busca historico de ordens", "HTTPS")
Rel(order_service, rabbit, "Publica novas ordens na fila", "AMQP")
Rel(order_service, erp, "Busca novas ordens", "HTTPS")

Rel(order_consumer, mongo, "Cria ou atualiza uma order", "HTTPS")
Rel(order_consumer, items, "Busca dados dos itens", "HTTPS")
Rel(order_consumer, combos, "Busca dados dos combos", "HTTPS")

Rel(rabbit, order_consumer, "Envia a atualização de uma ordem", "HTTPS")

Rel(order_publisher, rabbit, "Publica ordens na fila", "AMQP")

Rel(erp, order_publisher, "Envia atualização de ordens", "HTTPS")

Rel(mongo, order_service, "Busca novas ordens", "HTTPS")
@enduml

